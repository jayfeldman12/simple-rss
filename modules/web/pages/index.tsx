import type {NextPage} from 'next';
import Head from 'next/head';
import {useMemo, useState} from 'react';
import {useMutation, useQuery} from 'urql';
import {Feed, FeedItem, Maybe} from '../graphql/models/types';
import {FeedQuery, MarkRead} from '../queries/feedQuery';
import styles from '../styles/Home.module.css';

type FeedResponse = {
  feeds: Feed[];
};

const Home: NextPage = () => {
  const [username, setUsername] = useState('');
  const [pauseQueries, setPauseQueries] = useState(true);
  const [{data: feedResults, fetching, error}] = useQuery<FeedResponse>({
    query: FeedQuery,
    variables: {username, onlyUnread: true},
    pause: pauseQueries,
  });
  const [markReadResult, markRead] = useMutation(MarkRead);
  console.log('results', feedResults);

  const items = useMemo(() => {
    if (feedResults?.feeds) {
      const results = feedResults.feeds
        .flatMap(x => x.feedItems)
        .filter(x => x);

      results.sort(
        (a, b) => new Date(b!.date).valueOf() - new Date(a!.date).valueOf(),
      );
    }
    return null;
  }, [feedResults]);

  const onItemClick = (feed: Feed, item: Maybe<FeedItem>) => {
    if (!item) return;
    markRead({username, feedId: feed._id, feedItemId: item.id});
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Simple RSS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to Simple RSS</h1>
        <h2>Username</h2>
        <input onChange={event => setUsername(event.target.value)}></input>
        <button style={{marginTop: 20}} onClick={() => setPauseQueries(false)}>
          Submit
        </button>
        {!fetching && error?.message?.includes('No user found') ? (
          <p>Invalid username</p>
        ) : null}

        {feedResults?.feeds?.map(feed => (
          <div key={feed.url}>
            <a href={feed.url}>
              <h3>{feed.url}</h3>
            </a>
            {feed.feedItems?.map(item => (
              <a onClick={() => onItemClick(feed, item)} key={item?.id}>
                <p>{item?.url}</p>
              </a>
            ))}
          </div>
        ))}
      </main>
    </div>
  );
};

export default Home;
